import { Stack, StackProps } from 'aws-cdk-lib';
import { Network, SdfVpcConfig } from './network.construct.js';
import { NagSuppressions } from 'cdk-nag';
import type { Construct } from 'constructs';



export type SharedPlatformStackProperties = StackProps & {
	environment: string;
	deleteBucket?: boolean;
	userVpcConfig?: SdfVpcConfig;
};

export class SharedPlatformInfrastructureStack extends Stack {
	constructor(scope: Construct, id: string, props: SharedPlatformStackProperties) {
		super(scope, id, props);

		// validation
		if (props.environment === undefined) {
			throw new Error('environment is required');
		}

		new Network(this, 'Network', {
			environment: props.environment,
			deleteBucket: props.deleteBucket,
			userVpcConfig: props.userVpcConfig ? props.userVpcConfig : undefined
		});


		NagSuppressions.addResourceSuppressionsByPath(this, [
				'/SharedPlatform/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource'
			],
			[
				{
					id: 'AwsSolutions-IAM4',
					appliesTo: ['Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'],
					reason: 'This policy attached to the role is generated by CDK.'

				},
				{
					id: 'AwsSolutions-IAM5',
					appliesTo: ['Resource::*'],
					reason: 'This resource condition in the IAM policy is generated by CDK, this only applies to logs:DeleteRetentionPolicy and logs:PutRetentionPolicy actions.'

				}],
			true);
	}
}
