import { Stack, StackProps } from "aws-cdk-lib";
import type { Construct } from "constructs";
import * as ssm from "aws-cdk-lib/aws-ssm";
import { userPoolIdParameter } from "@df/cdk-common";
import { NagSuppressions } from 'cdk-nag';
import { Discovery } from "./discovery.construct.js";

interface DiscoveryStackProps extends StackProps {
    identityStoreId: string;
}

/**
 * Contains the infrastructure for the Discovery module for a hub account
 */
export class DiscoveryStack extends Stack {
    constructor(scope: Construct, id: string, props: DiscoveryStackProps) {
        super(scope, id, props);

        const cognitoUserPoolId = ssm.StringParameter.fromStringParameterAttributes(this, 'CognitoUserPoolId', {
            parameterName: userPoolIdParameter,
            simpleName: false
        }).stringValue;

        new Discovery(this, "Discovery", {
            cognitoUserPoolId: cognitoUserPoolId,
            identityStoreId: props.identityStoreId
        });

        NagSuppressions.addResourceSuppressionsByPath(this, [
                '/DiscoveryStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource'
            ],
            [
                {
                    id: 'AwsSolutions-IAM4',
                    appliesTo: ['Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'],
                    reason: 'This policy attached to the role is generated by CDK.'

                },
                {
                    id: 'AwsSolutions-IAM5',
                    appliesTo: ['Resource::*'],
                    reason: 'The resource condition in the IAM policy is generated by CDK, this only applies to logs:DeleteRetentionPolicy and logs:PutRetentionPolicy actions.'

                }],
            true);
    }
}
