import { Stack, StackProps } from 'aws-cdk-lib';
import { NagSuppressions } from 'cdk-nag';
import type { Construct } from 'constructs';
import { SsoSeeder } from './ssoSeeder.construct.js';




export type SsoCustomStackProperties = StackProps & {
	environment: string;
	ssoInstanceArn?: string;
	adminEmail?:string;
	samlMetaDataUrl?: string;
	ssoRegion: string;
};

export class SsoCustomStack extends Stack {
	constructor(scope: Construct, id: string, props: SsoCustomStackProperties) {
		super(scope, id, props);

		// validation
		if (props.environment === undefined) {
			throw new Error('environment is required');
		}

		
		// SSO Instance ID Found create SSO Application for cogito
		if (props.ssoInstanceArn && props.adminEmail) {
			new SsoSeeder(this, 'SsoSeeder', {
				environment: props.environment,
				ssoInstanceArn:props.ssoInstanceArn,
				ssoRegion:props.ssoRegion,
				adminEmail: props.adminEmail
			});

		}
		

		NagSuppressions.addResourceSuppressionsByPath(this, [
				'/SsoCustomStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource'
			],
			[
				{
					id: 'AwsSolutions-IAM4',
					appliesTo: ['Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'],
					reason: 'This policy attached to the role is generated by CDK.'

				}],
			true);

		NagSuppressions.addResourceSuppressionsByPath(this, [
				'/SsoCustomStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource'
			],
			[
				{
					id: 'AwsSolutions-IAM5',
					appliesTo: ['Resource::*'],
					reason: 'This resource condition in the IAM policy is generated by CDK, this only applies to logs:DeleteRetentionPolicy and logs:PutRetentionPolicy actions.'

				}],
			true);
	}
}
