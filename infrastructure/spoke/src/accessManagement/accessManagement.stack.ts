import { Stack, StackProps } from "aws-cdk-lib";
import type { Construct } from "constructs";
import { AccessGrantor } from "./accessGrantor/accessGrantor.construct.js";
import { NagSuppressions } from 'cdk-nag';

interface AccessManagementStackProps extends StackProps {
    hubAccountId: string;
}

/**
 * Contains the infrastructure for the Access Management module for a spoke account
 */
export class AccessManagementStack extends Stack {
	constructor(scope: Construct, id: string, props: AccessManagementStackProps) {
		super(scope, id, props);

        new AccessGrantor(this, "AccessGrantor", {
            hubAccountId: props.hubAccountId,
        });

        NagSuppressions.addResourceSuppressionsByPath(this, [
            '/AccessManagementStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource',
          ],
          [
            {
              id: 'AwsSolutions-IAM4',
              appliesTo: ['Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'],
              reason: 'This policy attached to the role is generated by CDK.'
      
            }],
          true);
      
          NagSuppressions.addResourceSuppressionsByPath(this, [
            '/AccessManagementStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource'
          ],
          [
            {
              id: 'AwsSolutions-IAM5',
              appliesTo: ['Resource::*'],
              reason: 'This resource condition in the IAM policy is generated by CDK, this only applies to logs:DeleteRetentionPolicy and logs:PutRetentionPolicy actions.'
      
            }],
          true);
    }
}